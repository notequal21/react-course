{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/User/UserInfo/User-info.module.scss","components/Profile/User/User.module.scss","components/Profile/Posts/PostsAll/Posts-all.module.scss","components/Profile/Posts/PostsList/Posts-list.module.scss","components/Profile/Posts/PostsList/Post/Post.module.scss","components/Profile/Posts/Posts.module.scss","components/Profile/Posts/PostsNew/Posts-new.module.scss","components/Profile/User/UserInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/User/UserInfo/User-info.jsx","components/Profile/User/User.jsx","components/Profile/Posts/PostsAll/Posts-all.jsx","components/Profile/User/Img_userimg.jpg","components/Profile/Posts/PostsList/Post/Post.jsx","components/Profile/Posts/PostsList/Posts-list.jsx","components/Profile/Posts/PostsNew/Ico_arrow-down.jsx","components/Profile/Posts/PostsNew/Post-new.jsx","components/Profile/Posts/PostsNew/Post-newContainer.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","type","UserInfo","className","s","userInfo","userInfo__name","profileIfno","fullName","User","userImg","profile","photos","large","userImage","user","user__img","src","alt","Preloader","PostsAll","posts__all","Post","postsList__item","postsList__itemTop","postsList__itemImg","postsList__itemUsername","name","postsList__itemTime","time","postsList__itemDate","date","postsList__itemDelete","postsList__itemText","text","PostsList","post","posts","map","p","userName","postTime","postDate","postText","id","postsList","Ico_arrowDown","focusable","role","xmlns","viewBox","fill","d","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","postsNew","Field","component","Textarea","validate","required","placeholder","postsNew__input","postsNew__btn","PostNew","values","addPost","newPostText","PostNewContainer","profilePage","dispatch","addPostCreator","Posts","store","Profile","ProfileContainer","userId","match","params","currentUserID","history","push","getUserProfile","getStatus","compose","userID","withRouter"],"mappings":"wOAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAOtC,OAAOM,YAAQX,EAARW,CAAoCL,K,oBCf/CM,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,gBAAkB,mCAAmC,eAAiB,kCAAkC,eAAiB,oC,oBCA9LD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,0B,oBCAxDD,EAAOC,QAAU,CAAC,WAAa,gC,oBCA/BD,EAAOC,QAAU,CAAC,UAAY,gC,oBCA9BD,EAAOC,QAAU,CAAC,gBAAkB,8BAA8B,mBAAqB,iCAAiC,mBAAqB,iCAAiC,wBAA0B,sCAAsC,oBAAsB,kCAAkC,oBAAsB,kCAAkC,sBAAwB,oCAAoC,oBAAsB,oC,oBCAhbD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,gBAAkB,mCAAmC,cAAgB,mC,2JCmC/GC,EAlCgB,SAACN,GAE5B,MAA8BO,oBAAS,GAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASP,EAAMU,QAAzC,mBAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAU,WACND,EAAUX,EAAMU,UACjB,CAACV,EAAMU,SAeV,OACI,sCACOF,GACC,sBAAKK,QAhBI,WACjBJ,GAAY,IAeJ,qBAAqCT,EAAMU,UAE9CF,GACG,sBAAKM,SAVM,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QASaC,OAfpB,WACnBT,GAAY,GACZT,EAAMmB,aAAaT,IAaX,qBAA+D,uBAAOO,MAAOP,EAAQU,WAAW,EAAMC,KAAM,gBClB7GC,EATE,SAACtB,GACd,OACI,sBAAKuB,UAAS,UAAKC,IAAEC,UAArB,UACI,qBAAKF,UAAS,UAAKC,IAAEE,gBAArB,SAAwC1B,EAAM2B,YAAYC,WAC1D,cAAC,EAAD,CAAwBlB,OAAQV,EAAMU,OAAQS,aAAcnB,EAAMmB,mB,mCCoB/DU,EAtBF,SAAC7B,GAEV,IAAI8B,EAAU,KAEd,OAAK9B,EAAM+B,SAKPD,EAD+B,OAA/B9B,EAAM+B,QAAQC,OAAOC,MACXC,IAEAlC,EAAM+B,QAAQC,OAAOC,MAI/B,sBAAKV,UAAS,UAAKC,IAAEW,MAArB,UACI,qBAAKZ,UAAS,UAAKC,IAAEY,WAArB,SAAkC,qBAAKC,IAAKP,EAASQ,IAAI,OACzD,cAAC,EAAD,CAAUX,YAAa3B,EAAM+B,QAASrB,OAAQV,EAAMU,OAAQS,aAAcnB,EAAMmB,mBAZ7E,cAACoB,EAAA,EAAD,K,kBCAAC,EARE,WACb,OACI,sBAAKjB,UAAS,UAAKC,IAAEiB,YAArB,mBACU,yC,oCCLH,MAA0B,wCCmB1BC,EAfF,SAAC1C,GACV,OACI,sBAAKuB,UAAS,UAAKC,IAAEmB,iBAArB,UACI,sBAAKpB,UAAS,UAAKC,IAAEoB,oBAArB,UACI,qBAAKrB,UAAS,UAAKC,IAAEqB,oBAArB,SAA2C,qBAAKR,IAAKH,EAAWI,IAAI,OACpE,qBAAKf,UAAS,UAAKC,IAAEsB,yBAArB,SAAiD9C,EAAM+C,OACvD,qBAAKxB,UAAS,UAAKC,IAAEwB,qBAArB,SAA6ChD,EAAMiD,OACnD,qBAAK1B,UAAS,UAAKC,IAAE0B,qBAArB,SAA6ClD,EAAMmD,OACnD,qBAAK5B,UAAS,UAAKC,IAAE4B,uBAArB,uBAEJ,qBAAK7B,UAAS,UAAKC,IAAE6B,qBAArB,SAA6CrD,EAAMsD,WCAhDC,EAXG,SAACvD,GACf,IAAIwD,EAAOxD,EAAMyD,MACZC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMZ,KAAMY,EAAEC,SAAqBX,KAAMU,EAAEE,SAAUV,KAAMQ,EAAEG,SAAUR,KAAMK,EAAEI,UAAlDJ,EAAEK,OAE7C,OACI,qBAAKzC,UAAS,UAAKC,IAAEyC,WAArB,SACKT,K,0BCGEU,EAXO,WAClB,OACI,qBAAK,cAAY,OAAOC,UAAU,QAAQ,cAAY,MAAM,YAAU,aACjE5C,UAAU,uCAAuC6C,KAAK,MAAMC,MAAM,6BAClEC,QAAQ,cAFb,SAGI,sBAAMC,KAAK,eACLC,EAAE,gQ,mDCWdC,EAAYC,YAAiB,IAW7BC,EAAsBC,YAAU,CAACC,KAAM,eAAjBD,EATR,SAAC5E,GACjB,OACI,uBAAM8E,SAAU9E,EAAM+E,aAAcxD,UAAS,UAAKC,IAAEwD,UAApD,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,GAAYa,YAAW,0BAA6BvC,KAAM,cAAexB,UAAS,UAAKC,IAAE+D,mBAC1I,wBAAQhE,UAAS,UAAKC,IAAEgE,eAAxB,SAAyC,cAAC,EAAD,YAOtCC,EAxBC,SAACzF,GAMb,OACI,cAAC2E,EAAD,CAAqBG,SALR,SAACY,GACd1F,EAAM2F,QAAQD,EAAOE,iB,QCUdC,EAFU1F,aAbH,SAACV,GACnB,MAAO,CACHA,MAAOA,EAAMqG,YAAYF,gBAGR,SAACG,GACtB,MAAO,CACHJ,QAAS,SAACC,GACNG,EAASC,YAAeJ,QAKXzF,CAA6CsF,GCHvDQ,EAVD,SAACjG,GACZ,OACI,sBAAKuB,UAAS,UAAKC,IAAEiC,OAArB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAkByC,MAAOlG,EAAMP,QAC/B,cAAC,EAAD,CAAWgE,MAAOzD,EAAMP,MAAMgE,YCG1B0C,G,OATC,SAACnG,GACb,OACI,sBAAKuB,UAAW,UAAhB,UACI,cAAC,EAAD,CAAMQ,QAAS/B,EAAM+B,QAASrB,OAAQV,EAAMU,OAAQS,aAAcnB,EAAMmB,eACxE,cAAC,EAAD,CAAO1B,MAAOO,EAAMP,a,wBCA1B2G,E,uKAEF,WAEI,IAAIC,EAAStG,KAAKC,MAAMsG,MAAMC,OAAOF,OAChCA,IACDA,EAAStG,KAAKC,MAAMwG,gBAEhBzG,KAAKC,MAAMyG,QAAQC,KAAK,UAGhC3G,KAAKC,MAAM2G,eAAeN,GAC1BtG,KAAKC,MAAM4G,UAAUP,K,oBAGzB,WACI,OAAO,cAAC,EAAD,2BAAatG,KAAKC,OAAlB,IAAyB+B,QAAShC,KAAKC,MAAM+B,QAASrB,OAAQX,KAAKC,MAAMU,OAAQS,aAAcpB,KAAKC,MAAMmB,oB,GAhB1FjB,IAAML,WA4BtBgH,sBACX1G,aATkB,SAACV,GAAD,MAAY,CAC9BsC,QAAStC,EAAMqG,YAAY/D,QAC3BtC,MAAOA,EAAMqG,YACbpF,OAAQjB,EAAMqG,YAAYpF,OAC1B8F,cAAe/G,EAAME,KAAKmH,OAC1BpH,OAAQD,EAAME,KAAKD,UAIM,CAACiH,mBAAgBC,cAAWzF,mBACrD4F,IACAnH,IAHWiH,CAIbT","file":"static/js/3.916a3aa9.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo__name\":\"User-info_userInfo__name__2IBnN\",\"userInfo__birth\":\"User-info_userInfo__birth__307rI\",\"userInfo__city\":\"User-info_userInfo__city__2mTcM\",\"userInfo__site\":\"User-info_userInfo__site__3KBmP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__2ufsp\",\"user__img\":\"User_user__img__igsR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts__all\":\"Posts-all_posts__all__2TeRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsList\":\"Posts-list_postsList__3HXqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsList__item\":\"Post_postsList__item__I6ZRN\",\"postsList__itemTop\":\"Post_postsList__itemTop__b1dN5\",\"postsList__itemImg\":\"Post_postsList__itemImg__14gzJ\",\"postsList__itemUsername\":\"Post_postsList__itemUsername__20t4R\",\"postsList__itemTime\":\"Post_postsList__itemTime__5UXDC\",\"postsList__itemDate\":\"Post_postsList__itemDate__2VR-l\",\"postsList__itemDelete\":\"Post_postsList__itemDelete__1P3zx\",\"postsList__itemText\":\"Post_postsList__itemText__29Jpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__1S5wz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsNew\":\"Posts-new_postsNew__1WUQV\",\"postsNew__input\":\"Posts-new_postsNew__input__15rKM\",\"postsNew__btn\":\"Posts-new_postsNew__btn__1YSkC\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !editMode &&\r\n                <div onClick={activateMode}>Status: {props.status}</div>\r\n            }\r\n            {editMode &&\r\n                <div onChange={onStatusChange} onBlur={deactivateMode}>Status: <input value={status} autoFocus={true} type={'text'}/></div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from \"./User-info.module.scss\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst UserInfo = (props) => {\r\n    return (\r\n        <div className={`${s.userInfo}`}>\r\n            <div className={`${s.userInfo__name}`}>{props.profileIfno.fullName}</div>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import UserInfo from \"./UserInfo/User-info\";\r\nimport s from \"./User.module.scss\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userImage from \"../../../assets/img/profile-placeholder.png\";\r\n\r\nconst User = (props) => {\r\n\r\n    let userImg = null\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (props.profile.photos.large === null) {\r\n        userImg = userImage;\r\n    } else {\r\n        userImg = props.profile.photos.large;\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.user}`}>\r\n            <div className={`${s.user__img}`}><img src={userImg} alt=\"\"/></div>\r\n            <UserInfo profileIfno={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import s from './Posts-all.module.scss';\r\n\r\nconst PostsAll = () => {\r\n    return (\r\n        <div className={`${s.posts__all}`}>\r\n            Posts <span>1</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsAll;","export default __webpack_public_path__ + \"static/media/Img_userimg.1c4790a8.jpg\";","import s from \"./Post.module.scss\";\r\nimport userImage from \"../../../User/Img_userimg.jpg\";\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={`${s.postsList__item}`}>\r\n            <div className={`${s.postsList__itemTop}`}>\r\n                <div className={`${s.postsList__itemImg}`}><img src={userImage} alt=\"\"/></div>\r\n                <div className={`${s.postsList__itemUsername}`}>{props.name}</div>\r\n                <div className={`${s.postsList__itemTime}`}>{props.time}</div>\r\n                <div className={`${s.postsList__itemDate}`}>{props.date}</div>\r\n                <div className={`${s.postsList__itemDelete}`}>delete</div>\r\n            </div>\r\n            <div className={`${s.postsList__itemText}`}>{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import s from \"./Posts-list.module.scss\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst PostsList = (props) => {\r\n    let post = props.posts\r\n        .map(p => <Post name={p.userName} key={p.id} time={p.postTime} date={p.postDate} text={p.postText}/>)\r\n\r\n    return (\r\n        <div className={`${s.postsList}`}>\r\n            {post}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsList;","\r\nconst Ico_arrowDown = () => {\r\n    return (\r\n        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"arrow-down\"\r\n             className=\"svg-inline--fa fa-arrow-down fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\r\n             viewBox=\"0 0 448 512\">\r\n            <path fill=\"currentColor\"\r\n                  d=\"M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z\"></path>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Ico_arrowDown;","import Ico_arrowDown from \"./Ico_arrow-down\";\r\nimport s from \"./Posts-new.module.scss\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormControls/FormControls\";\r\n\r\nconst PostNew = (props) => {\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <AddNewPostFormRedux onSubmit={addNewPost}/>\r\n    )\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={`${s.postsNew}`}>\r\n            <Field component={Textarea} validate={[required, maxLength]} placeholder={`Enter your text here...`} name={'newPostText'} className={`${s.postsNew__input}`}/>\r\n            <button className={`${s.postsNew__btn}`}><Ico_arrowDown/></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"NewPostForm\"})(NewPostForm);\r\n\r\nexport default PostNew;","import React from \"react\";\r\nimport {addPostCreator} from \"../../../../redux/profile-reducer\";\r\nimport PostNew from \"./Post-new\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.profilePage.newPostText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst PostNewContainer = connect(mapStateToProps, mapDispatchToProps)(PostNew);\r\n\r\nexport default PostNewContainer;","import PostsAll from \"./PostsAll/Posts-all\";\r\nimport PostsList from \"./PostsList/Posts-list\";\r\nimport s from \"./Posts.module.scss\";\r\nimport PostNewContainer from \"./PostsNew/Post-newContainer\";\r\n\r\nconst Posts = (props) => {\r\n   return (\r\n       <div className={`${s.posts}`}>\r\n           <PostsAll/>\r\n           <PostNewContainer store={props.state}/>\r\n           <PostsList posts={props.state.posts}/>\r\n       </div>\r\n   )\r\n}\r\n\r\nexport default Posts;","import User from \"./User/User\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport './Profile.scss'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={'content'}>\r\n            <User profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <Posts state={props.state}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.currentUserID;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    state: state.profilePage,\r\n    status: state.profilePage.status,\r\n    currentUserID: state.auth.userID,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}